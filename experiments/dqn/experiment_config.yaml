# DQN ALGORITHM HPARAMS
batch_size: 1024
mini_batch_size: 256
n_sgd_epochs: 10
lr: 0.001 # 0.01, 0.001
weight_decay: 0.0001
nstep_learning: 4 # 1, 4
backprop_interval: 1  # 10
target_update_interval: 1000
value_aggr: mean
credit_assignment: True
gamma: 0.99 # 0.99, 0.1
eps_start: 0.9
eps_end: 0.05
eps_decay: 100000
memory_capacity: 10000
dqn_objective: db_auc
empty_action_penalty: 0

# DQN ARCHITECTURE HPARAMS
dqn_arch: TQNet
emb_dim: 128
cut_conv: CutConv
encoder_cut_conv_layers: 1
encoder_lp_conv_layers: 1
decoder_cut_conv_layers: 1
attention_heads: 4
lp_conv_aggr: mean
cut_conv_aggr: mean

# DATASETS
# measured lp_iterations for SCIP solving at the root node only:
# barabasi albert 25 (10000 instances) mean ~ 1.9K, std < 900
# barabasi albert 50 (20 instances) mean ~ 36K, std < 7K
# barabasi albert 100 (20 instances) mean ~ 80K, std ~ 51K
# so we set the lp_iterations_limit to 3K, 50K and 100K for the graphs of 25, 50 and 100 nodes respectively
datasets:
  trainset25:
    lp_iterations_limit: 3000
    ngraphs: 10000
    barabasi_albert_m: 10
    weights: normal  # uniform01 | normal | ones
    graph_type: barabasi-albert
    dataset_generation_seed: 46
    graph_size: 25
    dataset: trainset25
    time_limit_sec: 600
    baseline_solver: scip
    save_all_stats: False
  validset25:
    lp_iterations_limit: 3000
    eval_interval: 100
    scip_seed: [52, 176, 223]
    ngraphs: 10
    barabasi_albert_m: 10
    weights: normal  # uniform01 | normal | ones
    graph_type: barabasi-albert
    dataset_generation_seed: 36
    graph_size: 25
    dataset_name: validset25
    time_limit_sec: 600
    baseline_solver: scip
    save_all_stats: True
  testset25:
    lp_iterations_limit: 3000
    eval_interval: 100
    scip_seed: [52, 176, 223]
    ngraphs: 10
    barabasi_albert_m: 10
    weights: normal  # uniform01 | normal | ones
    graph_type: barabasi-albert
    dataset_generation_seed: 223
    graph_size: 25
    dataset_name: testset25
    time_limit_sec: 600
    baseline_solver: scip
    save_all_stats: True
  validset50:
    lp_iterations_limit: 50000
    eval_interval: 500
    scip_seed: [52, 176, 223]
    ngraphs: 10
    barabasi_albert_m: 10
    weights: normal  # uniform01 | normal | ones
    graph_type: barabasi-albert
    dataset_generation_seed: 36
    graph_size: 50
    dataset_name: validset50
    time_limit_sec: 3600
    baseline_solver: scip
    save_all_stats: True
  testset50:
    lp_iterations_limit: 50000
    eval_interval: 500
    scip_seed: [52, 176, 223]
    ngraphs: 10
    barabasi_albert_m: 10
    weights: normal  # uniform01 | normal | ones
    graph_type: barabasi-albert
    dataset_generation_seed: 223
    graph_size: 50
    dataset_name: testset50
    time_limit_sec: 3600
    baseline_solver: scip
    save_all_stats: True
  validset100:
    lp_iterations_limit: 100000
    eval_interval: 1000
    scip_seed: [52, 176, 223]
    ngraphs: 10
    barabasi_albert_m: 10
    weights: normal  # uniform01 | normal | ones
    graph_type: barabasi-albert
    dataset_generation_seed: 36
    graph_size: 100
    dataset_name: validset100
    time_limit_sec: 3600
    baseline_solver: scip
    save_all_stats: True
  testset100:
    lp_iterations_limit: 100000
    eval_interval: 1000
    scip_seed: [52, 176, 223]
    ngraphs: 10
    barabasi_albert_m: 10
    weights: normal  # uniform01 | normal | ones
    graph_type: barabasi-albert
    dataset_generation_seed: 223
    graph_size: 100
    dataset_name: testset100
    time_limit_sec: 3600
    baseline_solver: scip
    save_all_stats: True

# GENERAL
seed: 259385
debug: False
hide_scip_output: True
num_episodes: 2000000
log_interval: 20
checkpoint_interval: 20
verbose: 1
debug_cuda: False

# SCIP STUFF
reset_maxcuts_every_round: True  # avoid undesired unoughcuts in scip separationRoundLP
use_general_cuts: False

# CYCLE INEQUALITIES
chordless_only: False
simple_cycle_only: True
